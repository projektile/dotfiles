#!/bin/bash
#
# ~/bin/dwm-statusbar
#
# use gbdfed to replace font character
#
# Status bar for dwm. Expanded from:
# https://bitbucket.org/jasonwryan/eeepc/src/73dadb289dead8ef17ef29a9315ba8f1706927cb/Scripts/dwm-status

# Icon glyphs from font xbmicons.pcf
glyph_msc="\uE00E"
glyph_cpu="\uE00F"
glyph_mem="\uE010"
glyph_dl="\uE011"
glyph_ul="\uE012"
glyph_batt="\uE013"
glyph_eml="\uE014"
glyph_vol="\uE015"
glyph_tim="\uE016"
glyph_tor="\uE017"
glyph_temp="\uE01E"
sep_vert="\uE01F"
sep_line="\uE01A"
sep_bar="\uE01B"

print_batt_rem() {
  batt_rem="$(battery| awk '{print $2}')"
  echo -ne "${sep_vert}${glyph_batt}${batt_rem}% "
}

print_mem_used() {
  mem_used="$(free -m | awk 'NR==3 {print $3}')"
  echo -ne "${sep_vert}${glyph_mem}${mem_used}M "
}

print_volume() {
  vol="$(amixer get Master -c 1 | grep -oE "[[:digit:]]*%")"
  echo -ne "${sep_vert}${glyph_vol}${vol} "
}

print_temp() {
  temp="$(sensors |grep -m 1 temp1 | cut -c16-17)"
  echo -ne "${sep_vert}${glyph_temp}${temp}C "
}

print_datetime() {
  datetime="$(date "+%a %d %b %H:%M")"
  echo -ne "${sep_vert}${glyph_tim}${datetime}"
}

# network (from: http://dzen.geekmode.org/dwiki/doku.php?id=dzen:network-meter)
# cpu (from: https://bbs.archlinux.org/viewtopic.php?pid=661641#p661641)
rx_old=$(cat /sys/class/net/wlo1/statistics/rx_bytes)
tx_old=$(cat /sys/class/net/wlo1/statistics/tx_bytes)

while true; do
  # get new cpu idle and total usage
  eval $(awk '/^cpu /{print "cpu_idle_now=" $5 "; cpu_total_now=" $2+$3+$4+$5 }' /proc/stat)
  cpu_interval=$((cpu_total_now-${cpu_total_old:-0}))
  # calculate cpu usage (%)
  let cpu_used="100 * ($cpu_interval - ($cpu_idle_now-${cpu_idle_old:-0})) / $cpu_interval"

  # get new rx/tx counts
  rx_now=$(cat /sys/class/net/wlo1/statistics/rx_bytes)
  tx_now=$(cat /sys/class/net/wlo1/statistics/tx_bytes)
  # calculate the rate (K) and total (M)
  let rx_rate=($rx_now-$rx_old)/1024
  let tx_rate=($tx_now-$tx_old)/1024

  # output vars
  print_cpu_used() {
    printf "%-10b" "${sep_vert}${glyph_cpu}${cpu_used}% "
  }
  print_rx_rate() {
    printf "%-10b" "${sep_vert}${glyph_dl}${rx_rate}K "
  }
  print_tx_rate() {
    printf "%-10b" "${sep_vert}${glyph_ul}${tx_rate}K "
  }

  # Pipe to status bar, not indented due to printing extra spaces/tabs
  xsetroot -name "\
$(print_cpu_used)\
$(print_mem_used)\
$(print_volume)\
$(print_temp)\
$(print_rx_rate)\
$(print_tx_rate)\
$(print_batt_rem)\
$(print_datetime)"

  # reset old rates
  rx_old=$rx_now
  tx_old=$tx_now
  cpu_idle_old=$cpu_idle_now
  cpu_total_old=$cpu_total_now
  # loop stats every 1 second
  sleep 1
done
